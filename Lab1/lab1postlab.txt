1.)What are the GPIO control registers that the lab mentions? Briefly describe each of their functions.
MODER:Sets port mode of each pin (e.g, input, output, or analog).
OTYPER:Output mode you want for each pin. 
OSPEEDR:Allows for lower power consumption by reducing the speed of a peripheral. 
PUPDR:Configures internal pull-up/pull-down "resistors" to a pin.
IDR:Read only register for the logical state of each pin in the GPIO port. 
ODR:Sets the logical state of configured output pins.
BSRR:Allows quick modification of output register. 
LCKR:Locks the other configurations registers for the associated pin.
AFRL/AFRH:sed to configre alternate functions for each of the pins. 
BRR:Like the BSRR, but with the clearing bits in the lower half.
2.)What values would you want to write to the bits controlling a pin in the GPIOx_MODER register in order to set it to analog mode?:
Set the corresponding bits to the pin to both be ON (0x3)
3.)Examine the bit descriptions in GPIOx_BSRR reg: which bit would you want to set to clear the fourth bit in the ODR?:
(assuming the least significant bit is the 0th bit)-> set bit 20. 
4.)Perform the following bitwise operations:
-0xAD | 0xC7 = 0xEF
-0xAD & 0xC7 = 0x85
-0xAD & ~(0xC7) = 0x28
-0xAD ^ 0xC7 = 0x42
5.)How would you clear the 5th and 6th bits in a register while leaving the others alone?
 register = register & ~((1<<5) | (1<<6));
6.)What is the maximum speed the STM32F072R8 GPIO pins can handle in the lowest speed setting? () Use the chip datasheet: lab section 1.4.1 gives a hint to the location. Youâ€™ll want to search the I/O AC characteristics table. You will also need to view the OSPEEDR settings to find the bit pattern indicating the slowest speed :
2 MHz
7.)What RCC register would you manipulate to enable the following peripherals: (use the comments next to the bit defines for better peripheral descriptions):
-TIM1:APB2 RSTR/ENR
-DMA1:AHBENR
-12C1:APB1 RSTR/ENR